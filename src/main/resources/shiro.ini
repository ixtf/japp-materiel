[main]
# listener = org.apache.shiro.config.event.LoggingBeanListener
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
firstSuccessfulStrategy = org.apache.shiro.authc.pam.FirstSuccessfulStrategy
casFilter = org.apache.shiro.cas.CasFilter
casFilter.failureUrl = /login
#shiro.loginUrl = http://cas.hengyi.com:8080/login?service=http://192.168.0.128:8080/materiel/sso
shiro.loginUrl = http://cas.hengyi.com:8080/login?service=http://192.168.17.117:8080/materiel/sso
shiro.unauthorizedUrl = /unauthorized

shiroIniRealm = org.apache.shiro.realm.text.IniRealm
shiroIniRealm.resourcePath = classpath:shiro.ini
shiroIniRealm.name = INI

mySsoRealm = com.hengyi.japp.shiro.MySsoRealm
mySsoRealm.cacheManager = $cacheManager
mySsoRealm.casServerUrlPrefix = http://cas.hengyi.com:8080
#mySsoRealm.casService = http://192.168.0.128:8080/materiel/sso
mySsoRealm.casService = http://192.168.17.117:8080/materiel/sso

securityManager.cacheManager = $cacheManager
securityManager.authenticator.authenticationStrategy = $firstSuccessfulStrategy
securityManager.realms = $shiroIniRealm, $mySsoRealm
[users]
# format: username = password, role1, role2, ..., roleN
admin = admin,admin
 
[roles]
# format: roleName = permission1, permission2, ..., permissionN
admin = *
 
[urls]
# The /login.jsp is not restricted to authenticated users (otherwise no one could log in!), but
# the 'authc' filter must still be specified for it so it can process that url's
# login submissions. It is 'smart' enough to allow those requests through as specified by the
# shiro.loginUrl above.
/sso = casFilter
/login = anon
/logout = anon
/javax.faces.resource/** = anon
/fonts/** = anon
/Soap**/** = anon
/Rest**/** = anon
/faces/** = roles[admin]
/admin/** = roles[admin]
/** = authc